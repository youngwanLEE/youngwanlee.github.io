name: Update Google Scholar Citations

on:
  schedule:
    # Reduced frequency to avoid bot detection
    # Try different times when GitHub Actions traffic is lower
    - cron: '0 2 * * 1'    # Monday 2 AM UTC (weekly)
    - cron: '0 14 * * 4'   # Thursday 2 PM UTC (backup attempt)
    # Alternative: Monthly update
    # - cron: '0 0 1 * *'  # First day of every month
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: write  # Allow writing to repository contents
  actions: read    # Allow reading workflow status

jobs:
  update-citations:
    # Use self-hosted runner to avoid IP blocking
    # runs-on: self-hosted
    runs-on: ubuntu-latest  # Fallback to GitHub-hosted
    timeout-minutes: 8  # Further reduced timeout
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        cd google_scholar_crawler
        pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Update citation count
      env:
        GOOGLE_SCHOLAR_ID: ${{ secrets.GOOGLE_SCHOLAR_ID || 'EqemKYsAAAAJ' }}
      run: |
        cd google_scholar_crawler
        echo "Starting Google Scholar crawling..."
        python main.py
        exit_code=$?
        if [ $exit_code -eq 0 ]; then
          echo "Crawling completed successfully"
        else
          echo "Crawling failed with exit code: $exit_code"
          echo "This may be due to Google Scholar anti-bot measures"
          echo "Keeping existing citation data"
        fi
      continue-on-error: true
        
    - name: Copy results to google-scholar-stats
      run: |
        if [ -f "google_scholar_crawler/results/gs_data_shieldsio.json" ]; then
          cp google_scholar_crawler/results/gs_data_shieldsio.json google-scholar-stats/gs_data_shieldsio.json
          echo "New citation data copied successfully"
          echo "CITATION_UPDATED=true" >> $GITHUB_ENV
        else
          echo "No new data available, keeping existing data"
          echo "CITATION_UPDATED=false" >> $GITHUB_ENV
        fi
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add google-scholar-stats/gs_data_shieldsio.json
        if git diff --staged --quiet; then
          echo "No changes to commit"
          if [ "$CITATION_UPDATED" = "true" ]; then
            echo "Warning: Citation was updated but no git changes detected"
          fi
        else
          git commit -m "Update Google Scholar citations [$(date +'%Y-%m-%d %H:%M:%S')]"
          git push 
          echo "Changes committed and pushed successfully"
        fi 